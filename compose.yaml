# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
services:
  server:
    build:
      context: .
    env_file:
      - .env
    ports:
      - 8080:$PORT
    healthcheck:
      test: ['CMD', 'bun test']
    depends_on:
      postgres-db:
        condition: service_healthy
      redis-db: 
        condition: service_healthy
  postgres-db:
    image: bitnami/postgresql
    restart: always
    # user: postgres
    # secrets:
    #   - db-password
    volumes:
      - postgres-data:/data/pg
    env_file:
      - .env
      # - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    # expose:
    #   - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis-db:
    image: bitnami/redis
    restart: always
    # user: redis
    environment:
      - REDIS_PASSWORD=projeto-mei-redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 6379:6379
volumes:
  postgres-data: 
# secrets:
#   db-password:
#     file: db/password.txt

